<?xml version="1.0" encoding="UTF-8"?>
<!-- Wazuh Agent Configuration - Generated by Ansible -->
<ossec_config>
  <!-- Global configuration -->
  <global>
    <jsonout_output>yes</jsonout_output>
    <alerts_log>yes</alerts_log>
    <logall>no</logall>
    <logall_json>no</logall_json>
    <email_notification>{{ wazuh_agent_email_notification }}</email_notification>
    {% if wazuh_agent_email_notification %}
    <email_to>{{ wazuh_agent_email_to }}</email_to>
    <email_from>{{ wazuh_agent_email_from }}</email_from>
    <smtp_server>{{ wazuh_agent_email_smtp_server }}</smtp_server>
    {% endif %}
  </global>

  <!-- Wazuh manager/server connection configuration -->
  <client>
    <server>
      <address>{{ wazuh_manager_address }}</address>
      <port>{{ wazuh_manager_port }}</port>
      <protocol>tcp</protocol>
    </server>
    <crypto_method>aes</crypto_method>
    <auto_restart>yes</auto_restart>
    <notify_time>30</notify_time>
    <time-reconnect>60</time-reconnect>
  </client>

  <!-- File integrity monitoring (Syscheck) -->
  <syscheck>
    <disabled>no</disabled>
    <frequency>{{ wazuh_agent_syscheck_frequency }}</frequency>
    <scan_on_start>yes</scan_on_start>
    <alert_new_files>yes</alert_new_files>
    <auto_ignore>no</auto_ignore>
    <ignore_linux_type>sysfs</ignore_linux_type>
    <ignore_linux_type>proc</ignore_linux_type>
    <ignore_linux_type>tmpfs</ignore_linux_type>
    <ignore_linux_type>devtmpfs</ignore_linux_type>
    <ignore_linux_type>devpts</ignore_linux_type>
    <ignore_linux_type>securityfs</ignore_linux_type>
    <ignore_linux_type>selinuxfs</ignore_linux_type>
    <ignore_linux_type>cgroup</ignore_linux_type>
    <ignore_linux_type>debugfs</ignore_linux_type>
    <ignore_linux_type>tracefs</ignore_linux_type>

    <!-- Common directories to monitor -->
    {% if ansible_system == 'Linux' %}
    {% for dir in wazuh_agent_monitored_directories %}
    <directories check_all="{{ dir.check_all }}">{{ dir.path }}</directories>
    {% endfor %}
    
    <!-- Linux-specific files -->
    {% for file in wazuh_agent_linux_monitored_files %}
    <directories check_all="yes">{{ file }}</directories>
    {% endfor %}
    {% endif %}

    {% if ansible_os_family == 'Windows' %}
    <!-- Windows directories to monitor -->
    {% for dir in wazuh_agent_windows_monitored_directories %}
    <directories check_all="{{ dir.check_all }}">{{ dir.path }}</directories>
    {% endfor %}
    
    <!-- Windows-specific files -->
    {% for file in wazuh_agent_windows_monitored_files %}
    <directories check_all="{{ file.check_all }}">{{ file.path }}</directories>
    {% endfor %}
    
    <!-- Windows registry keys to monitor -->
    {% for reg in wazuh_agent_windows_registry_keys %}
    <windows_registry check_all="{{ reg.check_all }}">{{ reg.path }}</windows_registry>
    {% endfor %}
    {% endif %}

    <!-- Ignore these paths -->
    <ignore>/etc/mtab</ignore>
    <ignore>/etc/hosts.deny</ignore>
    <ignore>/etc/mail/statistics</ignore>
    <ignore>/etc/random-seed</ignore>
    <ignore>/etc/random.seed</ignore>
    <ignore>/etc/adjtime</ignore>
    <ignore>/etc/httpd/logs</ignore>
    <ignore>/etc/utmpx</ignore>
    <ignore>/etc/wtmpx</ignore>
    <ignore>/etc/cups/certs</ignore>
    <ignore>/etc/dumpdates</ignore>
    <ignore>/etc/svc/volatile</ignore>
    <ignore>/sys/devices/virtual/block/dm-</ignore>
    <ignore>/var/ossec/queue</ignore>
    <ignore>/var/ossec/logs</ignore>
    <ignore>/var/ossec/stats</ignore>
    <ignore>/var/ossec/var</ignore>
    <ignore>/var/ossec/tmp</ignore>
    <ignore>^/tftpboot</ignore>
    <ignore>/var/log</ignore>
  </syscheck>

  <!-- Active response - CCDC specific -->
  <active-response>
    <disabled>no</disabled>
    <ca_store>etc/wpk_root.pem</ca_store>
    <ca_verification>yes</ca_verification>
  </active-response>

  <!-- Root check -->
  {% if ansible_system == 'Linux' and wazuh_agent_rootcheck_enabled %}
  <rootcheck>
    <disabled>no</disabled>
    <check_unixaudit>yes</check_unixaudit>
    <check_files>yes</check_files>
    <check_trojans>yes</check_trojans>
    <check_dev>yes</check_dev>
    <check_sys>yes</check_sys>
    <check_pids>yes</check_pids>
    <check_ports>yes</check_ports>
    <check_if>yes</check_if>
    <frequency>43200</frequency>
    <rootkit_files>/var/ossec/etc/shared/rootkit_files.txt</rootkit_files>
    <rootkit_trojans>/var/ossec/etc/shared/rootkit_trojans.txt</rootkit_trojans>
    <skip_nfs>yes</skip_nfs>
  </rootcheck>
  {% endif %}

  <!-- Log collection -->
  <localfile>
    <log_format>command</log_format>
    <command>df -P</command>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>netstat -tulpn | grep LISTEN</command>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>last -n 20</command>
    <frequency>360</frequency>
  </localfile>

  {% if ansible_system == 'Linux' %}
  {% for log in wazuh_agent_linux_logs %}
  <localfile>
    <log_format>syslog</log_format>
    <location>{{ log }}</location>
  </localfile>
  {% endfor %}
  {% endif %}

  {% if ansible_os_family == 'Windows' %}
  <!-- Windows event logs monitoring -->
  {% for log in wazuh_agent_windows_logs %}
  <localfile>
    <log_format>eventchannel</log_format>
    <location>{{ log.name }}</location>
    {% if log.query %}
    <query>{{ log.query }}</query>
    {% endif %}
  </localfile>
  {% endfor %}
  {% endif %}

  <!-- OpenSCAP integration -->
  {% if ansible_system == 'Linux' and wazuh_agent_wodle_openscap_enabled %}
  <wodle name="open-scap">
    <disabled>no</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>
    
    {% if ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' %}
    <content type="xccdf" path="ssg-rhel-ds.xml">
      <profile>xccdf_org.ssgproject.content_profile_pci-dss</profile>
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
    {% endif %}
    
    {% if ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian' %}
    <content type="xccdf" path="ssg-debian-8-ds.xml">
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
    <content type="xccdf" path="ssg-ubuntu-16-ds.xml">
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
    {% endif %}
  </wodle>
  {% endif %}

  <!-- CIS-CAT integration -->
  {% if wazuh_agent_wodle_cis_cat_enabled %}
  <wodle name="cis-cat">
    <disabled>no</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>
    <java_path>java</java_path>
    <ciscat_path>wodles/ciscat</ciscat_path>
    
    {% if ansible_system == 'Linux' %}
    <content type="xccdf" path="benchmarks/CIS_Ubuntu_Linux_16.04_LTS_Benchmark_v1.0.0-xccdf.xml">
      <profile>Level 1 - Server</profile>
    </content>
    {% elif ansible_os_family == 'Windows' %}
    <content type="xccdf" path="benchmarks/CIS_Microsoft_Windows_Server_2016_Benchmark_v1.1.0-xccdf.xml">
      <profile>Level 1 - Member Server</profile>
    </content>
    {% endif %}
  </wodle>
  {% endif %}

  <!-- Command monitoring -->
  {% if wazuh_agent_command_monitoring_enabled %}
  <wodle name="command">
    <disabled>no</disabled>
    <tag>performance</tag>
    <command>top -b -n 1</command>
    <interval>30m</interval>
    <run_on_start>yes</run_on_start>
    <timeout>30</timeout>
  </wodle>
  
  <wodle name="command">
    <disabled>no</disabled>
    <tag>audit</tag>
    {% if ansible_system == 'Linux' %}
    <command>auditctl -l</command>
    {% elif ansible_os_family == 'Windows' %}
    <command>wevtutil gl Security</command>
    {% endif %}
    <interval>1h</interval>
    <run_on_start>yes</run_on_start>
    <timeout>30</timeout>
  </wodle>
  {% endif %}

  <!-- System inventory -->
  {% if wazuh_agent_syscollector_enabled %}
  <wodle name="syscollector">
    <disabled>no</disabled>
    <interval>1h</interval>
    <scan_on_start>yes</scan_on_start>
    <hardware>yes</hardware>
    <os>yes</os>
    <network>yes</network>
    <packages>yes</packages>
    <ports all="yes">yes</ports>
    <processes>yes</processes>
  </wodle>
  {% endif %}

  <!-- File monitoring for CCDC environment -->
  {% if wazuh_agent_file_monitoring_enabled %}
  <vulnerability-detector>
    <enabled>yes</enabled>
    <interval>1d</interval>
    <run_on_start>yes</run_on_start>
    {% if ansible_system == 'Linux' %}
    <provider name="canonical">
      <enabled>yes</enabled>
      <os>trusty</os>
      <os>xenial</os>
      <os>bionic</os>
      <os>focal</os>
      <os>jammy</os>
      <update_interval>1h</update_interval>
    </provider>
    {% if ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' %}
    <provider name="redhat">
      <enabled>yes</enabled>
      <os>5</os>
      <os>6</os>
      <os>7</os>
      <os>8</os>
      <update_interval>1h</update_interval>
    </provider>
    {% endif %}
    {% if ansible_distribution == 'Debian' %}
    <provider name="debian">
      <enabled>yes</enabled>
      <os>stretch</os>
      <os>buster</os>
      <os>bullseye</os>
      <update_interval>1h</update_interval>
    </provider>
    {% endif %}
    {% endif %}
    
    {% if ansible_os_family == 'Windows' %}
    <provider name="msu">
      <enabled>yes</enabled>
      <update_interval>1h</update_interval>
    </provider>
    {% endif %}
  </vulnerability-detector>
  {% endif %}

  <!-- Monitoring ports -->
  {% if wazuh_agent_monitored_ports %}
  <wodle name="command">
    <disabled>no</disabled>
    <tag>netstat</tag>
    {% if ansible_system == 'Linux' %}
    <command>netstat -tulpn | sort</command>
    {% elif ansible_os_family == 'Windows' %}
    <command>netstat -na</command>
    {% endif %}
    <interval>15m</interval>
    <run_on_start>yes</run_on_start>
    <timeout>30</timeout>
  </wodle>
  {% endif %}

  <!-- CCDC specific monitoring -->
  <wodle name="command">
    <disabled>no</disabled>
    <tag>process-list</tag>
    {% if ansible_system == 'Linux' %}
    <command>ps -eo user,pid,ppid,cmd --sort=-pcpu | head -n 15</command>
    {% elif ansible_os_family == 'Windows' %}
    <command>tasklist /v</command>
    {% endif %}
    <interval>15m</interval>
    <run_on_start>yes</run_on_start>
    <timeout>30</timeout>
  </wodle>
  
  <!-- Log analysis alerts -->
  <alerts>
    <log_alert_level>{{ wazuh_agent_log_alert_level }}</log_alert_level>
    <email_alert_level>12</email_alert_level>
  </alerts>
</ossec_config>